name: build-and-publish

on: [push]

jobs:
  build:
    name: Build binaries and release preview build

    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: ubuntu-latest
          - arch: aarch64
            runner: ubuntu-latest-arm64

    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write

    steps:

    - name: Check out Repository
      uses: actions/checkout@v4

    - name: Get Version and Commit
      id: get_version
      run: |
        echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV
        echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y flatpak flatpak-builder jq
        pipx install flatpak-node-generator

    - name: Build Flatpak
      run: |
        flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        flatpak remote-add --user --if-not-exists flathub-beta https://flathub.org/beta-repo/flathub-beta.flatpakrepo
        flatpak --user remote-modify --enable flathub
        flatpak --user remote-modify --enable flathub-beta
        git config --global --add safe.directory /__w/qobuz-linux/qobuz-linux
        flatpak-node-generator npm package-lock.json
        flatpak-builder --arch=${{ matrix.arch }} --verbose --user --disable-rofiles-fuse --install-deps-from=flathub --force-clean --repo=repo _build flatpak/dev.mukkematti.qobuz-linux.yml
        flatpak build-bundle repo qobuz-linux-${{ matrix.arch }}-${{ env.VERSION }}.flatpak dev.mukkematti.qobuz-linux

    - name: Release Artifacts
      uses: "softprops/action-gh-release@v2"
      with:
        tag_name: "${{ env.VERSION }}"
        prerelease: true
        name: "Development Build based on commit ${{ env.COMMIT }}"
        files: |
          qobuz-linux-${{ matrix.arch }}-${{ env.VERSION }}.flatpak

    
