name: build-and-publish

on: [push]

jobs:
  build-and-upload:
    name: Build for ${{ matrix.arch }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            runner: ubuntu-24.04
          - arch: aarch64
            runner: ubuntu-24.04-arm

    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write

    steps:

    - name: Check out Repository
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y flatpak flatpak-builder jq
        pipx install flatpak-node-generator

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        cache: 'npm'

    - name: Install npm dependencies and verify build
      run: |
        npm ci
        npm run build-base

    - name: Build Flatpak repo
      run: |
        flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        flatpak --user remote-modify --enable flathub
        git config --global --add safe.directory /__w/qobuz-linux/qobuz-linux
        # Generate flatpak sources from the exact package-lock.json that npm ci uses
        rm -f generated-sources.json
        flatpak-node-generator --no-requests-cache npm package-lock.json
        flatpak-builder --arch=${{ matrix.arch }} --jobs=1 --user --disable-rofiles-fuse --install-deps-from=flathub --force-clean --repo=repo _build flatpak/dev.mukkematti.qobuz-linux.yml

    - name: Upload Flatpak repo artifact
      uses: actions/upload-artifact@v4
      with:
        name: flatpak-repo-${{ matrix.arch }}
        path: repo

  package-and-release:
    name: Package and release multi-arch Flatpak
    needs: build-and-upload
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Check out Repository
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y flatpak jq

    - name: Download all architecture repos
      uses: actions/download-artifact@v4
      with:
        path: repos

    - name: Merge Flatpak repos
      run: |
        mkdir -p final-repo
        cp -a repos/flatpak-repo-x86_64/* final-repo/
        cp -a repos/flatpak-repo-aarch64/* final-repo/

    - name: Get Version and Commit
      id: get_version
      run: |
        echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV
        echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Create multi-arch Flatpak bundle
      run: |
        flatpak build-bundle final-repo qobuz-linux-${{ env.VERSION }}.flatpak dev.mukkematti.qobuz-linux

    - name: Release Artifacts
      uses: "softprops/action-gh-release@v2"
      with:
        tag_name: "${{ env.VERSION }}"
        prerelease: true
        name: "Development Build based on commit ${{ env.COMMIT }}"
        files: qobuz-linux-${{ env.VERSION }}.flatpak

    
